<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imlStates.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imlStates.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABA
        EAAAAk1TRnQBSQFMAgEBAgEAARgBAAEYAQABIAEAASABAAT/AREBAAj/AUIBTQE2BwABNgMAASgDAAGA
        AwABIAMAAQEBAAEQBgABIP8A/wAaAAH/AX8BewFvARABQgHGARgBYwEMAecBHAEQAUIBewFvAf8Bf+wA
        Ad4BewFrAS0OAAGMATEB/wF/KAAB/wF/Af8BfwH/AX8B/wF/Af8BfwH/AX8B/wF/Af8BfwH/AX8B/wF/
        Af8BfwH/AX8B/wF/Af8BfwH/AX8B/wF/Af8BfwH/AX8B/wF/Af8BfwH/AX8B/wF/Af8BfwH/AX8B/wF/
        Af8BfwH/AX8B/wF/Af8BfwH/AX+EAAHeAXsBpQEUEgABxgEYAf8BfyQAAf8BfwGzAV4BpwFZAacBWQGn
        AVkBpwFZAacBWQGnAVkBxwFZAccBWQHHAVkBxwFdAccBXQHHAV0BxwFdAccBXQHHAV0BxwFdAccBXQHH
        AV0BxwFZAccBWQHHAVkBxwFZAacBWQGnAVkBpwFZAacBWQGnAVkBpwFZAS0BWgHeAXuAAAH/AX8BawEt
        FgABrQE1Af8BfyIAARQBcwGgAW0BwAFxAcABcQHAAXEB4AF1AeABdQEAAXYBAAF6AQABegEgAXoBIAF6
        ASABfgEgAX4BIAF+AUABfgFAAX4BIAF+ASABfgEgAX4BIAF6AQABegEAAXoBAAF6AeABdQHgAXUB4AF1
        AcABcQGgAW0BgAFpAUABYQHVAWKAAAF7AW8aAAG1AVYB9wFeAVoBawYAAVoBawH3AV4B/wF/AgABewFv
        ARgBYwH/AX8CAAG9AXcBOQFnAf8BfwIAAWkBcgEAAXYBIAF6ASABegFAAXoBQAF6AWABegFgAX4BgAF+
        AYABfgGAAX4BoAF+AaABfgGgAX4BoAF+AaABfgGgAX4BoAF+AaABfgGgAX4BoAF+AYABfgGAAX4BYAF+
        AWABegFgAXoBQAF6AUABegEAAXYBwAFtAWABZQE5AWuAAAEQAUIEAAGtATUBUgFKAUIBCBYAAZwBcwIA
        AXsBbwQAAUoBKQGUAVIBIQEEAgAB1gFaAb0BdwHGARgCAAEQAUIB/wF/AVUBewFAAX4BYAF+AWABfgGA
        AX4BgAF+AaABfgGgAX4BoAF+AcABfgHAAX4B4AF+AeABfgHgAX4B4AF+AeABfgHgAX4B4AF+AeABfgHg
        AX4B4AF+AcABfgHAAX4BoAF+AaABfgGAAX4BgAF+AWABfgFAAXoB4AFxAekBXQH/AX+AAAEIASECAAEQ
        AUIEAAGcAXMWAAFjAQwBKQElAUIBCBYAARABQgH/AX8BhQF6AWABfgFgAX4BgAF+AYABfgGgAX4BoAF+
        AcABfgHAAX4BwAF+AeABfgHgAX4B4AF+AXIBfwH+AX8BlQF/AeABfgHgAX4B4AF+AeABfgHAAX4BwAF+
        AcABfgGgAX4BoAF+AYABfgFgAX4BIAF6AcABbQGcAXOCAAHGARgCAAH3AV4EAAH/AX8SAAHnARwBzgE5
        Ac4BOQHOATkBzgE5Ac4BOQHOATkBzgE5Ac4BOQHOATkBzgE5Ac4BOQHOATkBzgE5Ac4BOQHOATkBMQFG
        AgABmgF7AUABfgFgAX4BgAF+AYABfgGgAX4BoAF+AaABfgHAAX4BwAF+AcABfgHgAX4BwwF6Af8BfwH/
        AX8B/wF/AQcBfwHgAX4B4AF+AcABfgHAAX4BwAF+AaABfgGgAX4BgAF+AYABfgFAAX4BAAF2AW8BXgH/
        AX+CAAFrAS0CAAHGARgB3gF7Af8BfwFSAUoSAAFCAQgBOQFnAVoBawFaAWsBWgFrAVoBawFaAWsBWgFr
        AVoBawFaAWsBWgFrAVoBawFaAWsBWgFrAVoBawFaAWsBvQF3AgAB/wF/AcoBegFgAX4BYAF+AYABfgGA
        AX4BoAF+AaABfgGgAX4BwAF+AcABfgHAAX4BoQF6AbwBewH/AX8B/gF/AeIBfgHgAX4BwAF+AcABfgHA
        AX4BoAF+AaABfgGgAX4BgAF+AWABfgEgAXoBwQFpAd4Be4QAAbUBVjoAAcYBGAHeAXsEAAHdAXsBYQF+
        AWABfgGAAX4BgAF+AYABfgGgAX4BoAF+AaABfgHAAX4BwAF+AcABfgGjAXYBDAF3AcQBfgHAAX4BwAF+
        AcABfgHAAX4BoAF+AaABfgGgAX4BgAF+AYABfgFAAX4BAAF2AdQBYgH/AX+EAAHeAXsBIQEEFgABQgEI
        Ad4BewH/AX8B/wF/Af8BfwH/AX8B/wF/Af8BfwH/AX8B/wF/Af8BfwH/AX8B/wF/Af8BfwH/AX8B/wF/
        Af8BfwH/AX8IAAEyAXsBgwF+AWABfgGAAX4BgAF+AYABfgGgAX4BoAF+AaABfgHAAX4BwAF+AcMBfgEu
        AX8BwwF+AcABfgHAAX4BoAF+AaABfgGgAX4BoAF+AYABfgGAAX4BYAF+ASABegHlAWEB/wF/iAAB1gFa
        FgABGAFjKgAB/gF/AacBfgGlAX4BowF+AYABfgGAAX4BgAF+AaABfgGgAX4BoAF+AaABfgF2AXsB/wF/
        AZYBfwGgAX4BoAF+AaABfgGgAX4BoAF+AYABfgGAAX4BYAF+AUABegHgAXEBWQFvigAB/wF/AXMBThIA
        AZQBUgH/AX8sAAF3AXsBpgF+AcYBfgHGAX4BpAF+AaIBfgGAAX4BgAF+AaABfgGAAX4BvAF7Af8BfwHb
        AX8BgAF+AaABfgGgAX4BgAF+AYABfgGAAX4BYAF+AUABfgEAAXYBCgFeAf8Bf44AAVoBawHGARgKAAHn
        ARwBewFvMAAB/wF/AcsBegGnAX4BxwF+AccBfgHHAX4BxwF+AcUBfgGiAX4BYQF6Af8BfwH/AX8B/gF/
        AWABfgGAAX4BgAF+AYABfgGAAX4BYAF+AWABfgEgAXoBwAFtAbwBd5IAAf8BfwGcAXMBGAFjAdYBWgEY
        AWMBvQF3Af8BfzQAAbsBewGoAX4ByAF+AcgBfgHIAX4ByAF+AegBfgHoAX4ByQF2Af8BfwH/AX8B/wF/
        AaQBfgGBAX4BgAF+AWABfgFgAX4BYAF+AUABfgHgAXUBkAFeAf8Bf9QAAf8BfwEQAXsByQF+AckBfgHJ
        AX4ByQF+AekBfgHpAX4B7AF2Af8BfwH/AX8B/wF/AQsBfwHpAX4B6QF+AcgBfgHHAX4BpwF+AWYBegHm
        AWkB3gF7lgAB/wF/Ad4BewH/AX88AAHdAX8BygF+AcoBfgHKAX4BygF+AeoBfgHqAX4BDwF3Af8BfwH/
        AX8B/wF/AQ4BfwHqAX4B6gF+AeoBfgHKAX4BqgF+AYoBdgH2AWYB/wF/kgAB3gF7AUoBKQYAAZQBUgQA
        AZwBcwoAAVoBawQAAZwBcwIAAf8BfwgAAb0BdwIAAb0BdxIAAVUBewHLAX4BywF+AesBfgHrAX4B6wF+
        AREBdwH/AX8B/wF/Af8BfwEwAX8B6wF+AesBfgHrAX4BywF+AasBegErAWIB/wF/lAABnAFzAfcBXgHe
        AXsCAAG9AXcBQgEIAfcBXgIAAZwBcwoAAVoBawQAAf8BfwGEARABGAFjCAABUgFKAecBHBQAAf8BfwHN
        AX4BzAF+AewBfgHsAX4B7AF+ATQBdwH/AX8B/wF/Af8BfwFSAX8B7AF+AewBfgHsAX4BzAF6AWsBcgF6
        AW+gAAHvAT0BzgE5AgABnAFzCgABWgFrBgABlAFSAUoBKQFaAWsBWgFrAVoBawFaAWsBhAEQAdYBWhYA
        AZkBewHtAX4B7QF+Ae0BfgHtAX4BVQF3Af8BfwH/AX8B/wF/AVQBfwHtAX4B7QF+Ac0BfgGtAXoBTwFe
        Af8Bf54AAf8BfwHGARgB7wE9AgABnAFzCgABWgFrBgABvQF3AgABSgEpAa0BNQGtATUBCAEhAgAB3gF7
        FgAB/wF/AfABegHtAX4B7QF+Ae0BfgFWAXcB/wF/Af8BfwH/AX8BVAF/Ae0BfgHtAX4BzQF6AWsBbgG9
        AXecAAH/AX8BGAFjAaUBFAGEARABvQF3AgABnAFzAgABnAFzAZwBcwGcAXMBnAFzAbUBVggAAecBHAEY
        AWMEAAFSAUoBawEtGgABvAF7Ae4BfgHuAX4B7gF+Ac8BdgGaAXcB/wF/AbwBfwEPAX8B7gF+Ae4BfgHO
        AXYBswFiAf8Bf5oAAb0BdwHGARgBIQEEAVIBSgH/AX8EAAGcAXMCAAHGARgBxgEYAcYBGAHGARgBhAEQ
        CAAB1gFaAYwBMQIAAf8BfwGEARABGAFjHAABNAF7Ae8BfgHvAX4B7wF+Ae8BfgHOAXYB7gF+Ae8BfgHv
        AX4BzwF6AUwBZgH+AX+cAAHGARgBjAExAd4BewgAAZwBcwoAAVoBawgAAd4BewIAAf8BfwGcAXMCAAH/
        AX8cAAHeAX8B8AF+AfABfgHwAX4BEAF/ARABfwEQAX8B8AF+AfABfgGvAXYBFwFrnAAB3gF7AgABnAFz
        CgABnAFzCgABWgFrCgABawEtARgBYwExAUYB7wE9IAABWAF7AREBfwERAX8BEQF/AREBfwERAX8B8QF+
        AfEBegFNAV4B/wF/nAAB/wF/AUIBCAG1AVYCAAH/AX8BWgFrAd4BewIAAZwBcwoAAVoBawoAARgBYwFK
        ASkBQgEIAVoBayAAAf8BfwHxAX4BEgF/ARIBfwESAX8BEgF/AfIBegGvAXIBewFzoAABewFvAWMBDAFj
        AQwBIQEEAcYBGAHeAXsCAAGcAXMKAAFaAWsKAAH/AX8CAAFCAQgB/wF/IgABmwF7ARIBfwESAX8BEgF/
        ARIBfwHyAXoBcQFeAf8Bf6IAAf8BfwG9AXcBvQF3BgAB/wF/Af8BfwgAAf8BfwH/AX8KAAH/AX8B/wF/
        JAAB/wF/ARMBewETAX8BEwF/ARMBewJuAd4Be/QAAd0BewETAX8BEwF/AfMBdgH2AWYB/wF/9gABegF7
        AdIBdgFZAXMB/wF/nAABQgFNAT4HAAE+AwABKAMAAYADAAEgAwABAQEAAQEGAAECFgAD/wEACP8IAAj/
        CAAB4AEPBv8IAAHAAQcC/wGAAgABAQgAAYABAwL/DQABAQL/DgABcQERDgABIA0AARgGAAEBCAABGAMA
        AYACAAEBDAABgAIAAQMMAAHAAgABAwsAAQEB4AIAAQcIAAGAAQMC/wHgAgABDwgAAYABAwL/AfACAAEP
        CAAB4AEPAv8B8AIAAR8IAAHwAR8C/wH4AgABHwgABP8B+AIAAT8IAAH4A/8B/AIAAT8IAAHgAWcBkQHj
        Af4CAAF/CAAB4gEnAZEB5wH+AgAB/wgAAf8BJwGYAQcB/wIAAf8IAAH+AScBmAEHAf8BAAEBAf8IAAH4
        ASABHAHPAf8BgAEBAf8IAAHwAWABHAGPAf8BwAEDAf8IAAHxAecBnAEPAf8BwAEHAf8IAAHjAecBngEf
        Af8B4AEHAf8IAAHiAScBngEfAf8B4AEPAf8IAAHwAScBngEfAf8B8AEPAf8IAAH4AecBnwE/Af8B8AEf
        Af8IAAX/AfgBHwH/CAAF/wH8AT8B/wgACw==
</value>
  </data>
  <data name="textBox1.Text" xml:space="preserve">
    <value>Hash Column Transformation (c) 2012 - 2017 Pavel Pawlowski
==========================================================

Generates Hash value of selected solumns.

Parameter                         | Description
-----------------------------------------------------------------------------------------------------------------------
ParallelProcessing                | Specifies whether Parallel processing of hash Output columsn should be utilized
 - Off                            |  - No parallel processing
 - Auto                           |  - Parallel processing will start automatically on multi-core systems 
                                  |    if there is more than 5 output columns
 - On                             |  - Parallel processing always enabled on multi-core systems
HashFieldSeparator                | Field Separator to be used for UnicodeString Implementations.
                                  |  - Not being used in Binary Implementations
HashImplementationType            | Specifies way how the hash is being calculated
 - OriginalBinary                 |  - Original implementation for backward compatibility
 - BinarySafe                     |  - Binary implementaions which is fully safe for nulls 
                                  |    as well as for values interchange between columns
 - UnicodeStringDelimited         |  - Implementation concatenates the input columsn into
                                  |    unicode string delimited by the HashFieldSeparator.
                                  |    For NULL values a NullReplacementValue is being used.
                                  |    Implementation is not safe for NULL and values
                                  |    interchange between columns
 - UnicodeStringDelimitedNullSafe |  - Implementation concatenates the input columns into
                                  |    unicode string delimited by the HashFieldSeparator.
                                  |    It is fully safe for NULL handling as each column is
                                  |    preceeded by separate field indiciating whether the
                                  |    next field is NULL or not. It is not safe for values interchange.
 - UnicodeStringDelimitedSafe     |  - Implementation concatenates the input columns into
                                  |    unicode string delimited by the HashFieldSeparator.
                                  |    It is fully safe for NULL and values interchange
                                  |    between columns. Each field is preceeded by separate
                                  |    field indicating whetherr it is NULL or not and
                                  |    also variable length data are prefixed by length of following field.
HashInputColumns                  | List of input columns to build the hash. 
                                  |  - Order of the fields affects Hash value
HshType                           | Specifies the Hash Algorithm to be used for hashing
NullReplacementValue              | Specifies the NULL replacement value for UnicodeStringDelimited implementation
StringTrimming                    | Specifies how the string values should be trimmed.
 - None                           |  - No String trimming will occur. This causes that
                                  |    eg. char, nchar and varchar and nvarchar will generate different hashes due
                                  |    to trailing spaces
 - Right                          | - Trailing whitespace characters will be trimmed
 - Left                           | - Leading whitespace characters will be trimmed
 - Full                           | - Both Leading and Trailing whitespace characters will be trimmed</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAQAICAAAAEAIACoEAAARgAAACAgAAABAAgAqAgAAO4QAAAQEAAAAQAgAGgEAACWGQAAEBAAAAEA
        CABoBQAA/h0AACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAFMAAACtAAAA3wAAAPAAAADeAAAAqAAAAEwAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACIAAADJAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AMAAAAAbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiAAAA5wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAN8AAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMkAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAALwAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABRAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAIoAAAB1AAAAWAAAAAAAAAAAAAAAAAAA
        AGEAAAB1AAAAGgAAAAAAAABMAAAAbAAAAAIAAAAAAAAAMQAAAGoAAAAEAAAAAAAAAKgAAAD/AAAA/wAA
        ALwAAACeAAAA9AAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD9AAAARAAA
        AAAAAABWAAAA/wAAAP8AAADLAAAAjgAAAPkAAAD/AAAAgAAAADIAAADhAAAA/wAAAKsAAAAFAAAA2AAA
        AP8AAACrAAAAAAAAAAAAAABKAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAADxAAAA0wAAAPQAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AKgAAADiAAAA/wAAAHsAAAAAAAAAAAAAABkAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAADeAAAAtgAAALYAAAC2AAAAtgAAALYAAAC2AAAAtgAAALYAAAC2AAAAtgAAALYAAAC2AAAAtgAA
        ALYAAAC2AAAAowAAAMgAAAD/AAAA3wAAACoAAAANAAAAnQAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAPMAAABnAAAAVwAAAFcAAABXAAAAVwAAAFcAAABXAAAAVwAAAFcAAABXAAAAVwAA
        AFcAAABXAAAAVwAAAFcAAAA+AAAAiAAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA4gAAACQAAAAkAAAA+gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA9QAAAB4AAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAA
        AAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAEAAAAAAAAAAAAAAB/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAByAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAACaAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAjQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABdAAAA4QAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA3AAAAFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAADAAAAPwAAAHIAAACCAAAAcAAAADsAAAACAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAgAAAACAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQAAADLAAAA/wAAAP8AAAD7AAAAjwAA
        AAAAAAAAAAAAQAAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAYAAAAP8AAAAAAAAASAAAAPsAAAAcAAAAAAAA
        AAAAAAAAAAAAAAAAADwAAAD/AAAANAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASAAAAHwAAAAkAAAAAAAA
        ADgAAADzAAAAdAAAAAAAAABAAAAA/wAAAAAAAAAAAAAAAAAAAAAAAABgAAAA/wAAAAAAAAAEAAAA6wAA
        AHAAAAAAAAAAAAAAAAAAAAAAAAAAmwAAANsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAK8AAAC3AAAAAAAAAEAAAAD/AAAAAAAAAAAAAAAAAAAAAAAAAGAAAAD/AAAAAAAA
        AAAAAACPAAAAzwAAAGAAAABgAAAAYAAAAGAAAADrAAAAgwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAYAAAA4wAAAK8AAAAAAAAAQAAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAYAAA
        AP8AAAAAAAAAAAAAADgAAAD/AAAAzwAAAL8AAAC/AAAA1wAAAP8GBgYlAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAcHBwJAgICcQAAAOcAAADrBQUFMQAAAAADAwNBAAAA/wMDA0EDAwNBAwMDQQMD
        A0EAAACHAAAA/wAAAAAAAAAAAAAAAAAAANsAAABwAAAAAAAAAAAAAACbAAAAxwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAAOMAAAD3AAAAmwAAABwAAAAAAAAAAAAAAEAAAAD/AAAA3wAA
        AN8AAADfAAAA3wAAAOsAAAD/AAAAAAAAAAAAAAAAAAAAgAAAAMMAAAAAAAAABAAAAOsAAABwAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADjAAAAwwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAQAAA
        AP8AAAAAAAAAAAAAAAAAAAAAAAAAYAAAAP8AAAAAAAAAAAAAAAAAAAAkAAAA/wAAABwAAABEAAAA+wAA
        ABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAP8AAABEAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABAAAAA/wAAAAAAAAAAAAAAAAAAAAAAAABgAAAA/wAAAAAAAAAAAAAAAAAAAAAAAADHAAAAcAAA
        AKMAAACzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzMzMFAAAA8wAAAIsAAAAAMzMzBQIC
        AmEHBwchAAAAAAMDA0EAAAD/AAAAAAAAAAAAAAAAAAAAAAICAmEAAAD/AAAAAAAAAAAAAAAAAAAAAAIC
        AnEAAADLAAAA8wAAAFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABUAAAA7wAA
        AO8AAAD3AAAA4wAAACAAAAAAAAAAQAAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAYAAAAP8AAAAAAAAAAAAA
        AAAAAAAAFxcXFgAAAPsAAADzHBwcCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAMAAAAMAAAADAAAAAAAAAAAAAAAAAAAAAEAAAAHAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAHAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA///////////gD///wAf//4AD//8AAf//AABxEQAAIAAYAAAAGAAAAAAAAAAAAAAAAAAAAYAD
        //+AA///4A////Af////////+P///+BnkePiJ5Hn/yeYB/4nmAf4IBzP8GAcj/HnnA/j554f4ieeH/An
        nh/4558///////////8oAAAAIAAAAEAAAAABAAgAAAAAAIAEAAAAAAAAAAAAAAABAAAAAAAAAAAAAP//
        /wApEhEAABkkAAoWPgAMICQAODEuAAYQSgAMPUcAET9AADk2SwAVSEwAFlZ6ACBncwApc3YAR1tbAEJL
        YwBUYGYAR3N6AHxtZQBhf3wAendyALpKHACtVRgAzE4HAMtLFgDVShUAxFAaANVVFADjUQgA7kgUAORX
        HwDpYBYAykUpANlIJwDSVycAzlA0AOFIIQDkXS0A22cqANx3LgDAZjIA3HY+AOdtKADidyAA4WUwAPZw
        MgC7a0sAtWBXAKl5YgDFakQA12pFANZ8UADla0gA5nZZAMN5ZgDoamEA5XZwAOySOwC6hFUAuoZtALOF
        cwCpmn4AvJR8AMGETADajEkAzolRANiHVQDQmlQA5IlKAOmFWADkl1wA3YxjANmYbADJknUA15l2AP+P
        ZADnlmcA6oBwAOSZeADaqWgA16V4AOeqaQDjo3cA+Kd4APu7eAD3x3cAADyDABFagAATZ4oACnOAACh8
        igAqfJQAEUyuAAZSugAkbbwAM2K4AC54uABtaoAAR3SyAB1X0gBEfe4ADYKIABSQnAAikpAAD5yiABqe
        pgAZhLgAFKGgABymugA7qqwAf4iKACrBvwA0iN4ABIDkAA+r5gATp+oADbzsAFycxwBQnNQAbpLZAFq3
        wQBatt4AT6LoAEW74wBcpvAAGcDDAAjP1AAGx/UAGM3zAATa+wAuyvIAD+/9ABvs9wAJ+PcAF/f3ACDg
        4AAg7vsAN+jyACD+8ABYwsIAbtTVAGzm0QB33OoAWOz6AET89gCNgJsAh5KRAL2VgACSpp4AoqSaAL2y
        sADBloAA15yCAOGbgQDGo4wA2qeJANy2iwDWqZUA2reVAOenhwDyqooA67KJAPe2hgDorZIA8aiZAOi2
        lgD3uZYAw62iAM+6oQDcuagA5bikAPi9pADut7UA8ri4APzHhQDpw5gA+MOZAPvRmADXxKcA2se2AMnd
        twDf0r8A6sanAPfHpwDl1q4A+9SnAOXJtQD5y7cA6dO7APjXuADn47QA/OK4AK2ywgCC0NAAucLDAIbF
        6QCqz+sAutbpAKHD8gCQ9+oAiOL8AJ7/8ACo4v4AtP/8ANzMwADAxtMA4M/DAPTNxgDn18YA99rGAObN
        2wDq29MA+d3TAOvtwwD75cYA6vDHAP30zADq4NIAFRYaAH19fQAeHh4AIyMjAGVlZQBycnIABQUFAAoK
        CgB3d3cAHR0dADc3NwAgICAAYmJiAAwMDAAhISEASUlJAFxcXAAnJycAVFRUAA4ODgAsLCwACwsLAFdX
        VwBDQ0MAYWFhAAICAgA0NDQAcXFxAAYGBgB/f38AdXV1ADY2NgAYGBgAPz8/AFJSUgAPDw8ADRoaAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAP3m/unxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPoAAAAAAAAA/AAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAD7AAAAAAAAAAAA5gAAAAAAAAAAAAAAAAAAAAAAAAAA+gAAAAAAAAAAAAAA8gAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+QAAAAAAAAAAAAAAAAAAAAAA8QAA8vPwAAAAAAAAAAAAAPQA
        AAAAAPX29wD4AN0A7QDsAO0AAAAAAAAAAAAAAAAAAO7v8AAAAAAAAAAAAAAA8eQAAAAAAAAAAAAAAAAA
        AOnq6urq6urq6urq6urq6urr5QDmAADnAAAAAAAAAAAA6AAAAAAAAAAAAAAAAAAAAADjAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAADkAADhAAAAAAAAAAAAAADiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAN8AAAAAAAAAAADgAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADdAAAAAADeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///////////g////gD///wAf//4AD//+AAf//AABwERwAAAA8AAAAGAD//wAAAAGAA///wAf//8AH
        ///wH////v////////////////////jv1/f3b9f3/2/b7/9v2A/+793f+eAd3/fv3r/3796/92/ff/jv
        33///////////ygAAAAQAAAAIAAAAAEAIAAAAAAAQAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        AEAAAAB0AAAAYgAAABMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQAA
        ALQAAAD/AAAA/wAAAP8AAADvAAAARQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AIcAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAO4AAABAAAAAFgAAAAAAAAA2AAAABwAAAC4AAAABAAAAJwAA
        AAEAAADgAAAA/wAAAP8AAAAAAAAAAAAAAP8AAAD/AAAA/wAAAMwAAACHAAAA/wAAANYAAAD+AAAArAAA
        APgAAACWAAAA6gAAAP8AAAD/AAAAAAAAAAAAAAD/AAAA/wAAAPQAAACLAAAAhwAAAIcAAACHAAAAhwAA
        AIcAAACHAAAAfAAAAKkAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP0AAACJAAAAgwAAAIMAAACDAAAAgwAA
        AIMAAACDAAAAgwAAAEMAAAAgAAAA5gAAAP8AAAD/AAAA/wAAAP8AAACAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcAAACJAAAAvQAAAKoAAABNAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAAAP8AAAAAAAAAAAAAAP8AAAAAAAAAAAAA
        AAAAAAD/AAAAAAAAAP8AAAAAAAAAAAAAAAAAAAD/AAAA/wAAAAAAAAAAAAAA/wAAAAAAAAD/AAAAAAAA
        AAAAAAAAAAAA/wAAAAAAAAD/AAAAAAAAAAAAAAAAAAAA/wAAAAAAAAAAAAAAAAAAAP8AAAAAAAAA/wAA
        AAAAAAAAAAAAAAAAAP8AAAAAAAAAAAAAAP8AAAD/AAAA/wAAAAAAAAAAAAAA/wAAAP8AAAAAAAAAAAAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAAAAAAAAAAAD/AAAAAAAAAP8AAAAAAAAA/wAAAAAAAAAAAAAAAAAA
        AAAAAAD/AAAAAAAAAAAAAAAAAAAA/wAAAAAAAAAAAAAA/wAAAAAAAAD/AAAAAAAAAP8AAAAAAAAAAAAA
        AP8AAAAAAAAA/wAAAAAAAAAAAAAAAAAAAP8AAAAAAAAAAAAAAAAAAAD/AAAAAAAAAAAAAAAAAAAA/wAA
        AP8AAAAAAAAAAAAAAP8AAAAAAAAAAAAAAAAAAAD/AAAAAAAAAAAAAAAAAAAA/wAAAAAAAAAAg/8AAAH/
        AAAAQAAAGAAAABgAAAAAAAAAAf8AAIP/AAD//wAAG64AAGuuAADrsQAAmDUAAHu1AABruwAAm7sAACgA
        AAAQAAAAIAAAAAEACAAAAAAAQAEAAAAAAAAAAAAAAAEAAAAAAAAYS1UAMVltADtPcwBXXVgATGNmANlS
        IADfWzAA3WwzANxoPgDcdz4AmG9eAN1/QQDde0UA0X9LAMR2UgDcgksA4YNTAOeCVADqiVkAzJptAN2M
        dQDEkHQAxJJ4AOGVZADokWcA55VqAOuZcwDmnHgA7atvAOOgdADmo3cAHn+IABBslwAxfoAAXXyXADF6
        0AAmd+EAOJydAEuMjgBQnKsAUZ24ABiv5AB9oNcAcqvcAHOu3QAVxMYAEOL1ABH79gAW8/oAH/D4AC/t
        9wB32M8AZ9P0AN6egwD0m4YA0qSKAOOphgDsqYcA666OAPGpgwD1voUA87ONAOe0lADpvpIA5LeeAO+2
        mgD1uJMA9bmUAPO7mQD2uZsA9LqbAOy4pADivLcA7cCDAPvEhQD2wZQA+MGWANvItQDrwaAA7cKjAOrH
        pgDsxagA6sWtAO3FrgDsx68A68+rAPDFoAD3xaQA9s2kAPvMoQD3xKwA+MevAPXLqwD1zK8A+MmvAOzW
        qQDx1qkA8dmrAO7LswDuzLEA78i0AOzMtgDuzboA6c+/APHOuQD21rEA8dW1APbXtAD41bEA/tW1APTZ
        tAD42LUA/dm1APHTvwDx1LwA9tq7APbYvQD33bwA9N69APvcvwDx5LgAvbvJAJv57ACo4+sAzcrLANrQ
        xgDrz8EA69fEAPTZwwD02sAA9drAAPfewQD538AA/NzGAPfZzQD33s4A7NzTAObgzwD74sUA/eXKAPTs
        zQD46cgA+e/IAP3rzgD58c4A7uDXAOzj1QDo4tkA6eXZAO/l3ADt6N0A8ODXAP/l1gDx7tQA/erRAP7t
        1QDz59sA8uffAPnh2AD9590A8OnZAPHp2QDz6dsA9evaAPDo3gDy6d4A8OveAPLr3wD16d0A9eveAPDt
        3wDy7d4A/OzZAP3w2gDc9f8A8+fhAPPp4QDw6+IA8uvgAPPq4AD07OIA8+vmAPTq5QD16+QA9OznAPXt
        5QD17uYA+OrhAP/v5wD06+gA9e3oAPjv6AD67OwA+vTgAP/04QD/9uIA+fPnAPry5gD78ucA/vXlAP33
        5wD/9+UA9fbuAP/y6gD+9+sA+vDvAPn56gD8++kA+fvvAPr67AD++uwA4fz1AODw+QD39/IA+vb0APf6
        8gD3/fAA9vj1APX79ADz/vYA9Pz3APb89wD5+/AA+/vzAP3+8QD+/vMA+Pr1AP769QD/+/cA+f31APr+
        9wD8/PcA//z3AP7/9gD///UA8PP4APb3+wD1+/gA9vv6APb+/QD5+vgA/Pr7APz8+gD+/fkA/P75AP7+
        +AD7+f4A/fj8AP77/QD6/P4A//z8AAAAAAAAAAAAAAAAAAAAAAAAAAAA+/v7+/v7+/v7+/v7+/v7+/v7
        +/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7
        +/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7
        +/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7
        +/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+///
        AADD/wAAgf8AABiqAAAYAAAAGAEAAIH/AADD/wAA//8AABuuAABrrgAA67EAAJg1AAB7tQAAa7sAAJu7
        AAA=
</value>
  </data>
</root>