<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAD/AAAA9gAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAA
        AP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAD/AAAA/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP0AAADvAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAAGAAAAAAAAAP8AAAAAAAAAAAAAAAAAAAD/AAAAAAAA
        AAAAAAAAAAAA/wAAAAAAAAAAAAAAAAAAAP8AAAAAAAAAAAAAAAAAAAD/AAAAAAAAAAAAAAAAAAAA/wAA
        AAAAAAAAAAAAAAAAAP8AAAAAAAAAAAAAAAAAAAAAAAAA5gAAAAAAAAAAAAAA/wAAAAAAAAAAAAAAAAAA
        AP8AAAAAAAAAAAAAAAAAAAD/AAAAAAAAAAAAAAAAAAAA/wAAAAAAAAAAAAAAAAAAAP8AAAAAAAAAAAAA
        AAAAAAD/AAAAAAAAAAAAAAAAAAAA/wAAAAAAAAAAAAAAAAAAAAAAAAD/AAAAAAAAAAAAAAD/AAAAAAAA
        AAAAAAAAAAAA/wAAAAAAAAAAAAAAAAAAAP8AAAAAAAAAAAAAAAAAAAD/AAAAAAAAAAAAAAAAAAAA/wAA
        AAAAAAAAAAAAAAAAAP8AAAAAAAAAAAAAAAAAAAD/AAAAAAAAAAAAAAAAAAAAAAAAAP8AAAAAAAAAAAAA
        AP8AAAAAAAAAAAAAAAAAAAD/AAAAAAAAAAAAAAAAAAAA/wAAAAAAAAAAAAAAAAAAAP8AAAAAAAAAAAAA
        AAAAAAD/AAAAAAAAAAAAAAAAAAAA/wAAAAAAAAAAAAAAAAAAAP8AAAAAAAAAAAAAAAAAAAAAAAAA/wAA
        AAAAAAAAAAAA/wAAAAAAAAAAAAAAAAAAAP8AAAAAAAAAAAAAAAAAAAD/AAAAAAAAAAAAAAAAAAAA/wAA
        AAAAAAAAAAAAAAAAAP8AAAAAAAAAAAAAAAAAAAD/AAAAAAAAAAAAAAAAAAAA/wAAAAAAAAAAAAAAAAAA
        AAAAAAD/AAAAAAAAAAAAAAD/AAAAAAAAAAAAAAAAAAAA/wAAAAAAAAAAAAAAAAAAAP8AAAAAAAAAAAAA
        AAAAAAD/AAAAAAAAAAAAAAAAAAAA/wAAAAAAAAAAAAAAAAAAAP8AAAAAAAAAAAAAAAAAAAD/AAAAAAAA
        AAAAAAAAAAAAAAAAAP8AAAAAAAAAAAAAAP8AAAAAAAAAAAAAAAAAAAD/AAAAAAAAAAAAAAAAAAAA/wAA
        AAAAAAAAAAAAAAAAAP8AAAAAAAAAAAAAAAAAAAD/AAAAAAAAAAAAAAAAAAAA/wAAAAAAAAAAAAAAAAAA
        AP8AAAAAAAAAAAAAAAAAAAAAAAAA/wAAAAAAAAAAAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAAAAAAAAAAAD//wAA//8AAP//AAD///////8A
        AP//AAD//wAA////////AAD//wAA//8AAP///////wAA//8AAP//AAD///////8AAP//AAD//wAA////
        ////AAD//wAA//8AAP///////wAA//8AAP//AAD//wAA/wAAAP8AAAAAAAAAAAAAAP//AAD//wAA//8A
        AP///////wAA//8AAP//AAD///////8AAP//AAD//wAA////////AAD//wAA//8AAP///////wAA//8A
        AP//AAD///////8AAP//AAD//wAA////////AAD//wAA//8AAP//AAD/AAAA/wAAAAAAAAAAAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA/////45OMwOMTDMDwMwzP+DMEz/hyJM/4cmDP+DBgz/AwcM/xEPDP4xn4z+efv8///x////4
        P///8B////x////8f////H///////4AAAAC7u7u9u7u7vbu7u727u7u9u7u7vbu7u727u7u9gAAAAYAA
        AAGAAAABgAAAAf////8oAAAAIAAAAEAAAAABAAgAAAAAAIAEAAAAAAAAAAAAAAABAAAAAAAAAAAAAP//
        /wAucdMAJHfeAC112QAufN8ANXHWADNy2QA6dd0ANHzdABxs7wAdc+wAHnjuABp08QAXevMAHnv1ABx9
        +gAlbe4AInTkAC105AAkc+4AIXjuACx87AAxdOcAM33lADp94gAxdO0ANn/tADp+6gA2b/MAIXTxACp1
        8gAle/QAK330ACdz/AAke/wAK339ADJ09AA6cfAAM3v0ADt98wAzd/oAMn36ADh/+ABFetYARHvbAEp4
        3ABCdfEAR3jyAB6A/QApge8AOoDiADCC7AA/hugANo7sACSC9AAsgfQALYzyACSB/AAsgfsAI4j5ADSD
        8wA5hfQANIj1ADiK9wAygvkAOYD4ADSN+gA7i/gAPpHzADmU+wBCiN4ASYzfAFqO2ABulMoAe5vXAHan
        3ABJguUAR4jkAEKE7gBCieoATo3rAFKM5QBejuQAVY/sAEyd4QBCk+kATJLsAEuc7gBVkuYAVZvlAFyb
        5gBRlO4AWpTtAFSb7QBbmusAQoL0AE6B8ABDi/QASYrwAEKP+QBJj/sARJP0AEyW9gBAmvYAS5vyAESS
        +QBLlfoAQ5z7AE2Z+QBQlPYAW5HwAFSc9QBam/QAUJT9AFSc+QBZnfkAYY/sAGCU4QBjm+UAbZziAGqV
        6gBinuwAcZzqAHyd6ABimvQAcp/xAFeh7QBKofAAQaD5AFWg9QBbpPUAXaj1AFWh+QBcpPkAXqn5AGGi
        4wBioewAaqTpAHOr6gB6resAfrHlAH6y6wBio/QAbqTzAGOq9gBqrPYAYqX6AGin+wBjq/kAaqz5AHCj
        8wB0rvUAfK7wAHOt+QB4rvsAbbH1AGyx+gBys/YAe7HyAHGy+QB6tPkAdLj8AHu5+gCBo+EAjK3jAISk
        6wCDqesAjaztAJKp5gCFsusAibPrAIa47wCbueUAlbjvAIWo8QCJr/EAhbvzAIy88wCQvPMAobTlAKe4
        5ACkvukAn8XvAI/C9gCVwvMAn8P3AJ3D/QCcyvkAp8nlAKXJ7wC21+4AocHxAKTJ8wCtyfAAo8b7AKTM
        +gCozfwAsM/2ALTO/QC4zP0AodL1AKvQ9wCs0vsAtNTyALrS9AC62PcAs9P+ALzV/QC92fwAvur7AM/d
        7QDR1+4AyM73AMbR9gDK1PUAxt32AMHS+wDC3fwAydn5ANnl7wDL4/QAxeL8AMrk/ADH6PwA0uHwAN/s
        8ADT5fwA1er8ANzq/ADO8f0A3fL+AOv+6gDw+eoA4erwAOLt/ADq7fsA/e7+AOP39gDv9PcA7/7wAOXz
        +gDl9/oA4vH+AOXw/gDr9PwA5fj+AO/5/gD09vcA9/7xAPr69ADy9PsA+Pb+ACxv3gD/AAAALXLPAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD+/v4B
        /v7+Af7+/gH+/v4B/v7+Af7+/gH+/v7+AAAAAP7+/gH+/v4B/v7+Af7+/gH+/v4B/v7+Af7+/v4AAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD/////3697A+9ve3/27rt/9u67f/nt23/57dt/9uvrf/br63/vZ/N/36fzf//+/////H////g////w
        H////H////x////8f///////gAAAALu7u727u7u9u7u7vbu7u727u7u9u7u7vbu7u72AAAABgAAAAYAA
        AAGAAAAB/////ygAAAAQAAAAIAAAAAEAIAAAAAAAQAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAaAAAAQwAA
        AAAAAAAwAAAALwAAAFgAAAAAAAAALQAAADkAAAAAAAAAVwAAAAAAAABmAAAAgAAAAGMAAAAAAAAAAQAA
        AKoAAAAPAAAArwAAAA0AAACwAAAAAAAAAJ4AAAClAAAAAAAAAK8AAAAAAAAAogAAABAAAAAMAAAAAAAA
        AAAAAAAvAAAAyAAAAFwAAAAAAAAAsAAAABAAAACgAAAAewAAACcAAACvAAAAAAAAAJ8AAAAAAAAAAAAA
        AAAAAAAAAAAAIQAAANwAAABKAAAAAAAAALAAAABsAAAAQwAAABgAAACIAAAArwAAAAAAAACfAAAAAAAA
        AAAAAAAAAAAAAAAAAKQAAAAiAAAArQAAAAYAAACwAAAAqwAAAAEAAAAAAAAAlQAAALYAAAAAAAAAnwAA
        AAAAAAAAAAAAAAAAABMAAABZAAAAAAAAADoAAAAsAAAABgAAAAQuLi5IAAAAAAAAAAEAAAAKAAAAAAAA
        AFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2NjZQAAAA/wAAAL8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALCwsmwAAAP8YGBjRAAAAQAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAAAgAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAfwAA
        AHwAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAABBAAAAgAAAAAAAAACAAAAAAAAAAIAAAAAAAAAAgAAA
        AAAAAACAAAAAAAAAAIAAAAAAAAAAgAAAAAAAAAAAAAAAeQAAAIAAAAAAAAAAgAAAAAAAAACAAAAAAAAA
        AIAAAAAAAAAAgAAAAAAAAACAAAAAAAAAAIAAAAAAAAAAAAAAAIAAAACAAAAAAAAAAIAAAAAAAAAAgAAA
        AAAAAACAAAAAAAAAAIAAAAAAAAAAgAAAAAAAAACAAAAAAAAAAAAAAACAAAAAgAAAAIAAAAC/AAAAgAAA
        AL8AAACAAAAAvwAAAIAAAAC/AAAAgAAAAL8AAACAAAAAvwAAAIAAAACAAAAAgAAAAID/AAD///////8A
        AP///////wAA////////AAD///////8AAP///////wAA////////AAD//wAA/wAAAIAAAABAAAAAgAAA
        AIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAABAIlEAAAJR
        AACIFwAAiBcAAICXAAAglwAA/H8AAPw/AAD+fwAAAAAAAFVWAABVVgAAVVYAAAAAAAAAAAAAAAAAACgA
        AAAQAAAAIAAAAAEACAAAAAAAQAEAAAAAAAAAAAAAAAEAAAAAAAAfe/QAK3fvACl68AAgfPgAKH36ACt8
        +gAof/gALX/4ADR68AAwffsAMn76AC+C7wA2h+sAO4ntADqK7gA7iu4AJoL1ACqC8QAqgfUAL4D0AC+C
        9wAugPkAL4H4AC6C+QAyg/EAN4bxADWB9wA2gfQANIP3ADaF9AA5h/IAOofxADuH8wA5h/YAMon0ADuJ
        8AA+ifIAPIrwAD2P8AA8i/cAOYz3AD6P9wAwgfgAMoH4ADGC+AAwivoAPIj7ADuM+AA9jPgAPo37AD+N
        +gA/jvkAP5L0AD6S+QBFiOcARY7mAEaP5wBIieYARYbqAEKF7wBHju4ASo3pAE2N7gBRjekASJHoAE6V
        7ABTkuYAVZbnAFOR6wBQmO8AVJjvAF6c7wBfne0AQIfyAEWH8ABAi/EAR4rwAEOM8QBEjPEARY/zAECM
        9QBEjPUARo/3AE+L8QBLjvEARI77AEOT9QBOkfAAS5D1AEqS9ABNkvUAT5T3AEKQ+gBHlPoATpP4AEiU
        +gBNlfsATJb6AEuR/wBOlP4ATJb9AEaf+QBPmvgAUpv2AFSd9wBVn/cAVp/3AFee9wBYmfIAUZP+AFCa
        +ABRmvkAUpr4AFOb+QBRnfoAVJz6AFOY/ABZnfoAWJ/5AGKa8gBxnvEAW6b2AF6l9wBToPoAVqD5AFmj
        +ABao/oAWab4AFyk+ABfp/oAWKH8AF+p+ABgoO4AZKTtAGWm7wBoo+wAeaXsAGCh8wBiovQAZKL0AGOk
        9QBsoPAAbqbzAGmm9wBiq/cAZqv3AGSs9wBqr/cAYqj5AGOp+ABhqvgAYqv5AGOq+gBkqPkAZaj5AGep
        +QBnrPkAaKv7AGit+ABpr/gAbK36AG2v+ABoq/0Aaav8AHKj9QBzpPQAc6b0AHer8wBxqPQAeKzyAHCs
        +QBpsPYAb7L2AG+1/AB5sfMAf7H2AHe49wBwsvgAe7X5AIWt6gCAsukAjrPuAJy67wCBs/YAgbX3AIK1
        9QCFtfcAj7HxAIu59gCJuvcAjL73AJG+9ACOwvgAmMP1AJrD9QCdyPcAn8j2AJbB+QChwO8AqcHqAKjK
        7wCpzfYAqM71ALHI8AC6z/IAr9P3ALbT8gC10PcAvtLyALLS+AC51/kAvtr5AMHV7wDD1fMAwdj2AMbf
        +QDK3/oA0d/zANDe9QDU3vYAweD1AM/h9wDK4PkAzuP4ANPh9gDc5/MA2Or3AN/s9QDY5PgA2uf8ANvm
        /ADX6fgA6vL6APL39AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6urq6urq6urq6urq6urq6urq
        6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq
        6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq
        6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq
        6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6urq6nW0
        AACttQAArVUAAN1VAACs5QAArOUAAHTlAAD/fwAA/j8AAP9/AAD/fwAAAAAAAG22AABttgAAbbYAAAAA
        AAA=
</value>
  </data>
</root>