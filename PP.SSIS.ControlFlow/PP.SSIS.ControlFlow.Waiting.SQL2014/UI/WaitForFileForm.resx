<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="cmsFiles.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>138, 17</value>
  </metadata>
  <metadata name="ofdSelectFile.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAQAICAAAAEAIACoEAAARgAAACAgAAABAAgAqAgAAO4QAAAQEAAAAQAgAGgEAACWGQAAEBAAAAEA
        CABoBQAA/h0AACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADbAAAAogAAAEQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAMUAAAAlAAAAAAAA
        AAAAAAAAAAAA/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAEAAAADyAAAA/wAAAPcAAACZAAAASwAAACcAAAAnAAAASwAAAJkAAAD3AAAA/wAA
        APEAAABAAAAAAAAAAAAAAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAnAAAA8AAAAP8AAADHAAAAIQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACIAAADJAAAA/wAAAPEAAAAnAAAAAAAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAMYAAAD/AAAAxwAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAsAAADIAAAA/wAAAMUAAAABAAAA/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABHAAAA/wAAAPYAAAAgAAAAAAAAAAEAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAD/AAAAAAAAAAAAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAAAAAAAAAAAD/AAAA/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAA/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAD/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAA
        AP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAA+wAAAPsAAAD7AAAA+wAAAPsAAAD7AAAA/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAD/AAAAAAAAAAAAAAAVAAAA0wAAAP8AAADTAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP8AAAAAAAAAFQAAANIAAAD/AAAA1AAA
        ABYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAAABUAAADSAAAA/wAA
        ANQAAAAWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAD/AAAA0gAA
        AP8AAADTAAAAFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAA
        APsAAAD7AAAA+wAAAPsAAAD7AAAA+wAAAPsAAAD7AAAA+wAAAPsAAAD7AAAA+wAAAPsAAAD7AAAA/wAA
        AP8AAAD/AAAA0wAAABUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAANMAAAAWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAHwAAAAc//wADP/4PwT/8H+A//C/wP/x/+D/8eHg//HgYP/x4ADAAeAAwAHiAP/w48D/8
        GOAwAAjBMAAAAz//gAc//8APMAAM/zAADP8///z/P//8/z///P8///z/P/8A/z//AP8//zD/P/8g/z//
        Af8//wP/AAAH/wAAD/8oAAAAIAAAAEAAAAABAAgAAAAAAIAEAAAAAAAAAAAAAAABAAAAAAAAAAAAAP//
        /wAucdMAJHfeAC112QAufN8ANXHWADNy2QA6dd0ANHzdABxs7wAdc+wAHnjuABp08QAXevMAHnv1ABx9
        +gAlbe4AInTkAC105AAkc+4AIXjuACx87AAxdOcAM33lADp94gAxdO0ANn/tADp+6gA2b/MAIXTxACp1
        8gAle/QAK330ACdz/AAke/wAK339ADJ09AA6cfAAM3v0ADt98wAzd/oAMn36ADh/+ABFetYARHvbAEp4
        3ABCdfEAR3jyAB6A/QApge8AOoDiADCC7AA/hugANo7sACSC9AAsgfQALYzyACSB/AAsgfsAI4j5ADSD
        8wA5hfQANIj1ADiK9wAygvkAOYD4ADSN+gA7i/gAPpHzADmU+wBCiN4ASYzfAFqO2ABulMoAe5vXAHan
        3ABJguUAR4jkAEKE7gBCieoATo3rAFKM5QBejuQAVY/sAEyd4QBCk+kATJLsAEuc7gBVkuYAVZvlAFyb
        5gBRlO4AWpTtAFSb7QBbmusAQoL0AE6B8ABDi/QASYrwAEKP+QBJj/sARJP0AEyW9gBAmvYAS5vyAESS
        +QBLlfoAQ5z7AE2Z+QBQlPYAW5HwAFSc9QBam/QAUJT9AFSc+QBZnfkAYY/sAGCU4QBjm+UAbZziAGqV
        6gBinuwAcZzqAHyd6ABimvQAcp/xAFeh7QBKofAAQaD5AFWg9QBbpPUAXaj1AFWh+QBcpPkAXqn5AGGi
        4wBioewAaqTpAHOr6gB6resAfrHlAH6y6wBio/QAbqTzAGOq9gBqrPYAYqX6AGin+wBjq/kAaqz5AHCj
        8wB0rvUAfK7wAHOt+QB4rvsAbbH1AGyx+gBys/YAe7HyAHGy+QB6tPkAdLj8AHu5+gCBo+EAjK3jAISk
        6wCDqesAjaztAJKp5gCFsusAibPrAIa47wCbueUAlbjvAIWo8QCJr/EAhbvzAIy88wCQvPMAobTlAKe4
        5ACkvukAn8XvAI/C9gCVwvMAn8P3AJ3D/QCcyvkAp8nlAKXJ7wC21+4AocHxAKTJ8wCtyfAAo8b7AKTM
        +gCozfwAsM/2ALTO/QC4zP0AodL1AKvQ9wCs0vsAtNTyALrS9AC62PcAs9P+ALzV/QC92fwAvur7AM/d
        7QDR1+4AyM73AMbR9gDK1PUAxt32AD8/PwAkJCQAIiIiACMjIwAlJSUAISEhADMzMwAlJiYAVVVVAEhI
        SACqqqoAf39/ACgoKABFRUUAKSkpAAcHBwB4eHgArq6uAD09PQBmZmYAXFxcAB8fHwCysrIAAgICAHt7
        ewAdHR0ALCwsAJaWlgAXFxcAGxsbABQUFAAtLS0AU1NTALS0tAA0NDQAS0tLAG1tbQBaWloAmZmZAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAD5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+/fn/AAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAD49fb35fkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPjwAADy8wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAA5QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADuAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAN7oAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAfAAAABz//AAM//g/BP/wf4D/8P/A//H/4P/x++D/8fDg//HwIMAB8yDAAfPg//DzwP/wc4DAA
        D8EwAAADP/+ABz//wA8wAAz/MAAM/z///P8///z/P//8/z///P8//wD/P/8A/z//MP8//yD/P/8B/z//
        A/8AAAf/AAAP/ygAAAAQAAAAIAAAAAEAIAAAAAAAQAQAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADfAAAAggAAAAkAAAAAAAAA/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAADIAAAAuAAAADkAAAAUAAAAOQAAALgAAADIAAAACgAA
        AP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACDAAAAtwAAAAMAAAAAAAAAAAAAAAAAAAADAAAAuAAA
        AIMAAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3wAAADkAAAAA////AVVVVRj///8BAAAAAAAA
        ADoAAADfAAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPwAAAATAAAAAMbGxgkiIiLUICAgnjU1
        NTQAAAAUAAAA/AAAAP8AAAAAAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAOQAAAACysrIKHh4eoEtL
        SyUsLCx3FhYWRAAAAN8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAggAAALcAAAADjY2NCRgY
        GJ4AAAAAAAAAAwAAALgAAACDAAAA/wAAAAAAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAtgQE
        BDotLS0zAAAAOQAAALcAAADJAAAACgAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAA
        AIQAAADfAAAA/wAAAN8AAACDAAAACgAAAAAAAAD/AAAAAAAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAAAAAAAP8AAAAAAAAAAAAAAAAAAAAAAAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAD/AAAAAAAAAAAAAAAAAAAAAAAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAAAAAAAAAAAAAAAAAAAAAAD/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAP0AAAD9AAAA/QAAAP8AAAAAAAAAAAAAAAAAAAAAAAAA/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAD/AAAABQAAAK4AAACvAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAK4AAACvAAAABgAAAAAAAAAAAAAAAAAAAAAAAAD/AAAA/QAA
        AP0AAAD9AAAA/QAAAP0AAAD9AAAA/QAAAP8AAACvAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAH4A
        AAB+OAAAfkQAAH5AAABAQAAAfggAAEAAAAB/AQAAQC8AAH/vAAB/7wAAfw8AAH8PAAB/DwAAAB8AACgA
        AAAQAAAAIAAAAAEACAAAAAAAQAEAAAAAAAAAAAAAAAEAAAAAAAAAAAAA////ACl68AAgfPgAKH36ACt8
        +gAof/gALX/4ADR68AAwffsAMn76AC+C7wA2h+sAO4ntADqK7gA7iu4AJoL1ACqC8QAqgfUAL4D0AC+C
        9wAugPkAL4H4AC6C+QAyg/EAN4bxADWB9wA2gfQANIP3ADaF9AA5h/IAOofxADuH8wA5h/YAMon0ADuJ
        8AA+ifIAPIrwAD2P8AA8i/cAOYz3AD6P9wAwgfgAMoH4ADGC+AAwivoAPIj7ADuM+AA9jPgAPo37AD+N
        +gA/jvkAP5L0AD6S+QBFiOcARY7mAEaP5wBIieYARYbqAEKF7wBHju4ASo3pAE2N7gBRjekASJHoAE6V
        7ABTkuYAVZbnAFOR6wBQmO8AVJjvAF6c7wBfne0AQIfyAEWH8ABAi/EAR4rwAEOM8QBEjPEARY/zAECM
        9QBEjPUARo/3AE+L8QBLjvEARI77AEOT9QBOkfAAS5D1AEqS9ABNkvUAT5T3AEKQ+gBHlPoATpP4AEiU
        +gBNlfsATJb6AEuR/wBOlP4ATJb9AEaf+QBPmvgAUpv2AFSd9wBVn/cAVp/3AFee9wBYmfIAUZP+AFCa
        +ABRmvkAUpr4AFOb+QBRnfoAVJz6AFOY/ABZnfoAWJ/5AGKa8gBxnvEAW6b2AF6l9wBToPoAVqD5AFmj
        +ABao/oAWab4AFyk+ABfp/oAWKH8AF+p+ABgoO4AZKTtAGWm7wBoo+wAeaXsAGCh8wBiovQAZKL0AGOk
        9QBsoPAAbqbzAGmm9wBiq/cAZqv3AGSs9wBqr/cAYqj5AGOp+ABhqvgAYqv5AGOq+gBkqPkAZaj5AGep
        +QBnrPkAaKv7AGit+ABpr/gAbK36AG2v+ABoq/0Aaav8AHKj9QBzpPQAc6b0AHer8wBxqPQAeKzyAHCs
        +QBpsPYAb7L2AG+1/AB5sfMAf7H2AHe49wBwsvgAe7X5AIWt6gCAsukAjrPuAJy67wCBs/YAgbX3AIK1
        9QCFtfcAj7HxAIu59gCJuvcAjL73AJG+9ACOwvgAmMP1AJrD9QCdyPcAn8j2AJbB+QChwO8AqcHqAKjK
        7wCpzfYAqM71ALHI8AC6z/IAr9P3ACt37wAiIiIAJCQkACMkJAAjIyMANDQ0AFdXVwBTU1MAYGBgAF9f
        XwBiYmIAYWFhAF5eXgA3NzcAOjo6AG1tbQAmJiYAhISEAHV2dgB2dnYAMTExAFlZWQAuLi4AfHx8AEZG
        RgBNTk4ASElJAEVFRQAzMzMAUFBQADIzMwBVVVUAPj4+AGRkZACNjY0AjIyMAERFRQB6enoAcHBwAAQE
        BAAtLS0AGBgYALKysgAeHh4AS0tLACwsLAAWFhYAxsbGACAgIAA1NTUAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHtAQAAAAAAAAAAAAAAAAAAz/4A
        AAAAAAAAAAAAAAAAAPkA+wAAAAAAAAAAAAAAAAD3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
        AAB+AAAAfjgAAH5EAAB+5gAAQOoAAH5sAABAOAAAfwEAAEAvAAB/7wAAf+8AAH8PAAB/DwAAfw8AAAAf
        AAA=
</value>
  </data>
</root>